version: "3"
services:
  redis:
    image: "redis:alpine"
    container_name: iot_redis
    network_mode: "host"

  mysql:
    image: mysql:8.0.22
    container_name: iot_db
    volumes:
      - ./mysql/sql/:/usr/share/sql/
      - ./mysql/config/my.cnf:/etc/my.cnf
      - ./mysql/data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: 'iotdata'
      MYSQL_ROOT_PASSWORD: '123456'
      TZ: Asia/shanghai
    network_mode: "host"

  clickhouse-server:
    # image：指定镜像，可以为镜像名称或镜像id，如果本地没有该镜像，compose会尝试pull该镜像
    image: yandex/clickhouse-server
    # container_name：指定容器名称，默认为 项目名称_服务名称_序号 的格式
    container_name: iot_clickhouse-server
    # networks配置该容器连接的网络，指定到文件末尾定义的networks
    network_mode: "host"
    # ports：暴露端口信息，格式为 宿主机端口:容器端口；仅指定容器端口时，宿主机会随机选择端口，类似于docker run -p
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9004:9004"
    volumes:
      # 例如：将当前目录下的config.xml文件映射到容器中的/etc/clickhouse-server/config.xml文件
      - ./config.xml:/etc/clickhouse-server/config.xml
      - ./users.xml:/etc/clickhouse-server/users.xml
      - ./data:/var/lib/clickhouse
      - ./log/clickhouse-server.log:/var/log/clickhouse-server/clickhouse-server.log
      - ./log/clickhouse-server.err.log:/var/log/clickhouse-server/clickhouse-server.err.log

  elasticsearch:
    image: elasticsearch:7.12.1
    container_name: iot_elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms8G -Xmx8G"
      - SET_CONTAINER_TIMEZONE=true
      - CONTAINER_TIMEZONE=Asia/Shanghai
    network_mode: "host"
    volumes:
      - ./volumes/elasticsearch:/usr/share/elasticsearch/data
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"

  kibana:
    container_name: iot_kibana
    image: docker.elastic.co/kibana/kibana:7.16.2
    environment:
      - CONTAINER_TIMEZONE=Asia/Shanghai
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,z
    network_mode: "host"

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: iot_zookeeper
    network_mode: "host"
    environment:
      - CONTAINER_TIMEZONE=Asia/Shanghai
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: iot_kafka
    network_mode: "host"
    #ports:
    #  - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - CONTAINER_TIMEZONE=Asia/Shanghai
    depends_on:
      - zookeeper